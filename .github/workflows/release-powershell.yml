name: Release powershell

on:
  workflow_call:
    inputs:
      event_json:
        required: true
        type: string
    secrets:
      DUSTY_RELEASE_BOT_PRIVATE_KEY:
        required: true
      PSGALLERY_API_KEY:
        required: true

permissions:
  contents: write

defaults:
  run:
    shell: pwsh

jobs:
  release-powershell:
    runs-on: ubuntu-latest
    steps:
      - name: Restore dependencies
        uses: fsackur/ci/.github/actions/setup-powershell@main

      - name: Generate bot token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: 1082187
          private-key: ${{ secrets.DUSTY_RELEASE_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          token: ${{ steps.app-token.outputs.token }}

      - name: Update version
        run: |
          $PrLabels = '${{ toJson(fromJson(inputs.event_json).pull_request.labels.*.name) }}' | ConvertFrom-Json
          $ManualRelease = '${{ inputs.release }}'

          $ReleaseLabel = @($PrLabels) -match '^release-'
          if ($ReleaseLabel.Count -gt 1)
          {
              "Multiple release labels found: $ReleaseLabel" | Write-Host -ForegroundColor Red
              exit 1
          }
          $Release = if ($ReleaseLabel) {$ReleaseLabel -replace '^release-'} else {$ManualRelease}

          Invoke-Build UpdateVersion -Release $Release

      - name: Test
        run: |
          Invoke-Build Build, Test

      - name: Release
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.app-token.outputs.installation-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

          Invoke-Build Publish -PSGalleryApiKey '${{ secrets.PSGALLERY_API_KEY }}'
